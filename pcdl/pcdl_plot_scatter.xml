<tool id="pcdl_plot_scatter" name="pcdl_plot_scatter" version="3.0.0+galaxy0" python_template_version="3.5" profile="21.05">
    <requirements>
        <requirement type="package" version="3.3.6">pcdl</requirement>
    </requirements>

    <stdio> <exit_code range=":" level="log" description="hello world!"/> </stdio>
    <command><![CDATA[
        #import re
        mkdir output_pc &&
        #for $file in $path:
            #set $filename = re.sub('[^\w\-\.\s]', '_', str($file.element_identifier))
            ln -s $file output_pc/$filename &&
        #end for

        pcdl_plot_scatter output_pc $focus --custom_data_type "$custom_data_type" --microenv $microenv --physiboss $physiboss --settingxml "$settingxml" --verbose $verbose --z_slice $z_slice --z_axis "$z_axis" --alpha $alpha --cmap $"cmap" --title "$title" --grid $grid --legend_loc "$legend_loc" --xlim "$xlim" --ylim "$ylim" --xyequal $xyequal --s $s --figsizepx "$figsizepx" --ext "$ext" --figbgcolor "$figbgcolor"
    ]]></command>

    <inputs>
        <section name="positional_arguments" title="positional arguments:" expanded="true">
        <param
            name="path" label="path"
            type="data_collection" collection_type="list"
            help="path to the PhysiCell output data collection"
        />
        <param
            name="focus" label="focus"
            type="text" value="cell_type" optional="false"
            help="column name from the pcdl_get_cell_attribute_list listing. default is cell_type."
        />
        </section>

        <section name="options" title="options:" expanded="true">
        <param
            name="custom_data_type" label="custom_data_type"
            type="text" value="" optional="true"
            help="parameter to specify custom_data variable types other than float (namely: int, bool, str) like this var:dtype myint:int mybool:bool mystr:str. downstream float and int will be handled as numeric, bool as Boolean, and str as categorical data. default is an empty string."
        />
        <param
            name="microenv" label="microenv"
            type="boolean" truevalue="true" falsevalue="false" checked="true"
            help="should the microenvironment be extracted and loaded into the df_cell dataframe? setting microenv to False will use less memory and speed up processing, similar to the original pyMCDS_cells.py script. default is True."
        />
        <param
            name="physiboss" label="physiboss"
            type="boolean" truevalue="true" falsevalue="false" checked="true"
            help="if found, should physiboss state data be extracted and loaded into the df_cell dataframe? default is True."
        />
        <param
            name="settingxml" label="settingxml"
            type="text" value="PhysiCell_settings.xml" optional="true"
            help="the settings.xml that is loaded, from which the cell type ID label mapping, is extracted, if this information is not found in the output xml file. set to None or False if the xml file is missing! default is PhysiCell_settings.xml."
        />
        <param
            name="verbose" label="verbose"
            type="boolean" truevalue="true" falsevalue="false" checked="false"
            help="setting verbose to True for more text output, while processing. default is False."
        />
        <param
            name="z_slice" label="z_slice"
            type="float" value="0.0" optional="false"
            help="z-axis position to slice a 2D xy-plain out of the 3D mesh. if z_slice position numeric but not an exact mesh center coordinate, then z_slice will be adjusted to the nearest mesh center value, the smaller one, if the coordinate lies on a saddle point. default is 0.0."
        />
        <param
            name="z_axis" label="z_axis"
            type="text" value="none" optional="false"
            help="for a categorical focus: list of labels; for a numeric focus: list of two floats; None, depending on the focus column variable dtype, extracts labels or min and max values from data. default is None."
        />
        <param
            name="alpha" label="alpha"
            type="float" value="1.0" optional="false"
            help="alpha channel transparency value between 1 (not transparent at all) and 0 (totally transparent). default is 1.0."
        />
        <param
            name="cmap" label="cmap"
            type="text" value="viridis" optional="false"
            help="matplotlib colormap string from https://matplotlib.org/stable/tutorials/colors/colormaps.html . default is viridis."
        />
        <param
            name="title" label="title"
            type="text" value="" optional="true"
            help="title prefix. default is an empty string."
        />
        <param
            name="grid" label="grid"
            type="boolean" truevalue="true" falsevalue="false" checked="true"
            help="plot axis grid lines. default is True."
        />
        <param
            name="legend_loc" label="legend_loc"
            type="select" display="radio"
            help="the location of the categorical legend, if applicable. default is 'lower left'"
        >
        <option value="best">best</option>
        <option value="upper right">upper right</option>
        <option value="upper center"></option>
        <option value="upper left"></option>
        <option value="center left"></option>
        <option value="lower left" selected="true"></option>
        <option value="lower center"></option>
        <option value="lower right"></option>
        <option value="center right"></option>
        <option value="center"></option>
        </param>
        <param
            name="xlim" label="xlim"
            type="text" value="none" optional="false"
            help="two floats separated by a space. x axis min and max value. None takes min and max from mesh x axis range. default is None."
        />
        <param
            name="ylim" label="ylim"
            type="text" value="none" optional="false"
            help="two floats separated by a space. y axis min and max value. None takes min and max from mesh y axis range. default is None."
        />
        <param
            name="xyequal" label="xyequal"
            type="boolean" truevalue="true" falsevalue="false" checked="true"
            help="to specify equal axis spacing for x and y axis. default is true."
        />
        <param
            name="s" label="s"
            type="float" value="1.0" optional="false"
            help="scatter plot dot size scale factor. with figsizepx extracted from initial.svg, scale factor 1.0 should be ok. adjust if necessary. default 1.0."
        />
        <param
            name="figsizepx" label="figsizepx"
            type="text" value="none" optional="false"
            help="size of the figure in pixels (integer), x y. the given x and y will be rounded to the nearest even number, to be able to generate movies from the images. None tries to take the values from the initial.svg file. fall back setting is 640 480. default is None."
        />
        <param
            name="ext" label="ext"
            type="select" display="radio"
            help="output image format. possible formats are jpg, png, and tif. default is jpg."
        >
        <option value="jpg" selected="true">jpg</option>
        <option value="png">png</option>
        <option value="tif">tif</option>
        </param>
        <param
            name="figbgcolor" label="figbgcolor"
            type="text" value="none" optional="false"
            help="figure background color. None is transparent (png) or white (jpg, tif). default is None."
        />
        </section>
    </inputs>

    <outputs>
        <data name="output1" format="jpg" from_work_dir="output_3d/cell_cell_type_z-5.0/output00000012_cell_type.jpg" />
    </outputs>

    <tests>
        <test>
            <param name="input1" value="output_3d/output00000012.xml"/>
            <output name="output1" file="output_3d/cell_cell_type_z-5.0/output00000012_cell_type.jpg"/>
        </test>
    </tests>

    <help><![CDATA[
function generates pandas scatter plots, under the returned path.

homepage: https://github.com/elmbeech/physicelldataloader
    ]]></help>

    <citations>
        <citation type="bibtex">
        @misc{githubphysicelldataloader,
            author = {Bucher, Elmar},
            year = {2025},
            title = {physicelldataloader},
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/elmbeech/physicelldataloader},
        }</citation>
    </citations>
</tool>
