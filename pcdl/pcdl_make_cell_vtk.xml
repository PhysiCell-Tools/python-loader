<tool id="pcdl_make_cell_vtk" name="pcdl_make_cell_vtk" version="3.0.0+galaxy0" python_template_version="3.5" profile="21.05">
    <requirements>
        <requirement type="package" version="3.3.6">pcdl</requirement>
    </requirements>

    <stdio> <exit_code range=":" level="log" description="hello world!"/> </stdio>
    <command><![CDATA[
        #import re
        mkdir output_pc &&
        #for $file in $path:
            #set $filename = re.sub('[^\w\-\.\s]', '_', str($file.element_identifier))
            ln -s $file output_pc/$filename &&
        #end for

        pcdl_make_cell_vtk output_pc $attribute --custom_data_type --microenv $microenv --physiboss $physiboss --settingxml "$settingxml" --verbose $verbose
    ]]></command>

    <inputs>
        <section name="positional_arguments" title="positional arguments:" expanded="true">
        <param
            name="path" label="path"
            type="data_collection" collection_type="list"
            help="path to the PhysiCell output data collection"
        />
        <param
            name="attribute" label="attribute"
            type="text" value="cell_type" optional="false"
            help="listing of mcds.get_cell_df dataframe column names, used for cell attributes. default is a single term: cell_type."
        />
        </section>

        <section name="options" title="options:" expanded="true">
        <param
            name="custom_data_type" label="custom_data_type"
            type="text" value="" optional="true"
            help="parameter to specify custom_data variable types other than float (namely: int, bool, str) like this var:dtype myint:int mybool:bool mystr:str. downstream float and int will be handled as numeric, bool as Boolean, and str as categorical data. default is an empty string."
        />
        <param
            name="microenv" label="microenv"
            type="boolean" truevalue="true" falsevalue="false" checked="true"
            help="should the microenvironment be extracted and loaded into the df_cell dataframe? setting microenv to False will use less memory and speed up processing, similar to the original pyMCDS_cells.py script. default is True."
        />
        <param
            name="physiboss" label="physiboss"
            type="boolean" truevalue="true" falsevalue="false" checked="true"
            help="if found, should physiboss state data be extracted and loaded into the df_cell dataframe? default is True."
        />
        <param
            name="settingxml" label="settingxml"
            type="text" value="PhysiCell_settings.xml" optional="true"
            help="the settings.xml that is loaded, from which the cell type ID label mapping, is extracted, if this information is not found in the output xml file. set to None or False if the xml file is missing! default is PhysiCell_settings.xml."
        />
        <param
            name="verbose" label="verbose"
            type="boolean" truevalue="true" falsevalue="false" checked="false"
            help="setting verbose to True for more text output, while processing. default is False."
        />
        </section>
    </inputs>

    <outputs>
        <data name="output1" format="vtkxml" from_work_dir="output_3d/output00000000_cell.vtp" />
    </outputs>

    <tests>
        <test>
            <param name="input1" value="output_3d/output00000000.xml"/>
            <output name="output1" file="output_3d/output00000000_cell.vtp"/>
        </test>
    </tests>

    <help><![CDATA[
function that generates 3D glyph vtk file for cells. cells can have specified attributes like cell_type, pressure, dead, etc. you can post-process this file in other software like paraview (https://www.paraview.org/).

homepage: https://github.com/elmbeech/physicelldataloader
    ]]></help>

    <citations>
        <citation type="bibtex">
        @misc{githubphysicelldataloader,
            author = {Bucher, Elmar},
            year = {2025},
            title = {physicelldataloader},
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/elmbeech/physicelldataloader},
        }</citation>
    </citations>
</tool>
